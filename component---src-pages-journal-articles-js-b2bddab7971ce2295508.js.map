{"version":3,"sources":["webpack:///./src/pages/journal/articles.js"],"names":["JournalArticles","render","posts","get","this","articleImages","articleImageMap","keyBy","node","fields","featureImageSlug","years","groupBy","p","moment","frontmatter","date","format","yearKeys","Object","keys","sort","reverse","location","props","title","className","map","year","yearPosts","key","post","image","slug","cleanText","excerpt","replace","to","journalPath","fluid","childImageSharp","React","Component","pageQuery"],"mappings":"4UAWMA,E,gLACJC,OAAA,WACE,IAAMC,EAAQC,cAAIC,KAAM,6BAClBC,EAAgBF,cAAIC,KAAM,kCAC1BE,EAAkBC,gBAAMF,GAAe,qBAAGG,KAAgBC,OAAOC,oBAEjEC,EAAQC,kBAAQV,GAAO,SAACW,GAAD,OAAOC,IAAOD,EAAEL,KAAKO,YAAYC,MAAMC,OAAO,WACrEC,EAAWC,OAAOC,KAAKT,GAAOU,OAAOC,UAE3C,OACE,kBAAC,IAAD,CAAQC,SAAUnB,KAAKoB,MAAMD,SAAUE,MAAM,YAC3C,yBAAKC,UAAU,eACb,iDAGF,yBAAKA,UAAS,wDACZ,yBAAKA,UAAS,WACbR,EAASS,KAAI,SAACC,GACb,IAAMC,EAAYlB,EAAMiB,GACxB,OACE,yBAAKE,IAAKF,GACV,4BAAKA,GACJC,EAAUF,KAAI,YAAqB,IAAZI,EAAW,EAAjBvB,KACVwB,EAAQ1B,EAAgByB,EAAKtB,OAAOwB,MACpCC,EAAYH,EAAKI,QAAQC,QAAQ,WAAY,IACnD,OACE,kBAAC,OAAD,CAAMC,GAAIN,EAAKtB,OAAO6B,aACtB,yBAAKZ,UAAU,OAAOI,IAAKC,EAAKtB,OAAO6B,aACrC,kBAAC,IAAD,CAAKC,MAAOP,EAAMxB,KAAKgC,gBAAgBD,QACvC,yBAAKb,UAAU,aACb,0BAAMA,UAAU,uBAAuBZ,IAAOiB,EAAKhB,YAAYC,MAAMC,OAAO,YAC5E,wBAAIS,UAAU,cACXK,EAAKhB,YAAYU,OAEpB,uBAAGC,UAAU,aAAaQ,cAUtC,kBAAC,IAAD,S,GA5CoBO,IAAMC,WAmDrB1C,YAER,IAAM2C,EAAS,c","file":"component---src-pages-journal-articles-js-b2bddab7971ce2295508.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { get, keyBy, groupBy } from 'lodash'\nimport Img from \"gatsby-image\"\nimport moment from 'moment'\n\nimport JournalSidebar from \"../../components/JournalSidebar\"\n\nimport Layout from '../../templates/Layout'\nimport './archive.css'\n\nclass JournalArticles extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.articles.edges')\n    const articleImages = get(this, 'props.data.articleImages.edges')\n    const articleImageMap = keyBy(articleImages, ({ node }) => node.fields.featureImageSlug)\n\n    const years = groupBy(posts, (p) => moment(p.node.frontmatter.date).format('YYYY'))\n    const yearKeys = Object.keys(years).sort().reverse()\n\n    return (\n      <Layout location={this.props.location} title=\"Articles\">\n        <div className=\"page-header\">\n          <h1>Journal Articles</h1>\n          {/* <p>Just the full articles in my journal.</p> */}\n        </div>\n        <div className={ `content-layout journal-content journal-articles-page` }>\n          <div className={ `content` }>\n          {yearKeys.map((year) => {\n            const yearPosts = years[year];\n            return (\n              <div key={year}>\n              <h2>{year}</h2>\n              {yearPosts.map(({ node: post }) => {\n                const image = articleImageMap[post.fields.slug]\n                const cleanText = post.excerpt.replace(/<[^>]+>/g, '')\n                return (\n                  <Link to={post.fields.journalPath}>\n                  <div className=\"post\" key={post.fields.journalPath}>\n                    <Img fluid={image.node.childImageSharp.fluid} />\n                    <div className=\"post-text\">\n                      <span className=\"post-date secondary\">{moment(post.frontmatter.date).format('MMMM Do')}</span>\n                      <h3 className=\"post-title\">\n                        {post.frontmatter.title}\n                      </h3>\n                      <p className=\"secondary\">{cleanText}</p>\n                    </div>\n                  </div>\n                  </Link>\n                )\n              })}\n              </div>\n            )\n          })}\n          </div>\n          <JournalSidebar />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default JournalArticles\n\nexport const pageQuery = graphql`\n  {\n    articleImages: allFile(filter: {\n      fields: {\n        featureImageType: { eq: \"journal\" }\n      }\n    }) {\n      edges {\n        node {\n          absolutePath\n          fields {\n            featureImageSlug\n          }\n          childImageSharp {\n            fluid(maxWidth: 480) {\n              base64\n              aspectRatio\n              src\n              srcSet\n              sizes\n              originalImg\n              originalName\n              presentationWidth\n              presentationHeight\n            }\n          }\n        }\n      }\n    }\n    articles: allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC\n      }\n      filter: {\n        fileAbsolutePath: {\n          glob: \"**/journal/**\"\n        }\n        frontmatter: {\n          link: { eq: null }\n        }\n      }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            journalPath\n          }\n          frontmatter {\n            date\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}