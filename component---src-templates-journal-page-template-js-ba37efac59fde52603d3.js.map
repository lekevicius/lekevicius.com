{"version":3,"sources":["webpack:///./src/components/JournalSidebar.js","webpack:///./src/templates/JournalPageTemplate.js"],"names":["JournalSidebar","minimal","className","action","method","target","onSubmit","window","open","type","name","placeholder","id","value","to","href","JournalPageTemplate","render","posts","get","this","renderAst","rehypeReact","createElement","React","Compiler","location","props","title","pageContext","page","map","post","node","fields","slug","isLink","frontmatter","link","key","date","journalPath","timeToRead","htmlAst","totalPages","rel","Component","pageQuery"],"mappings":"8FAAA,qCAoCeA,IAjCQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACrB,+BACE,0CAEA,uBAAGC,UAAU,aAAb,+CAEA,0BAAMA,UAAU,aAAaC,OAAO,oCAAoCC,OAAO,OAAOC,OAAO,cAAcC,SAAW,WAAqH,OAAxGC,OAAOC,KAAK,oCAAqC,cAAe,wCAA+C,IAChP,2BAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,iBAAiBC,GAAG,YAChE,2BAAOH,KAAK,SAASI,MAAM,IAAIH,KAAK,UACpC,2BAAOD,KAAK,SAASP,UAAU,YAAYW,MAAM,eAGnD,uBAAGX,UAAU,eAAb,oHAGGD,GACA,oCACC,uCACA,wBAAIC,UAAU,0BACZ,4BAAI,kBAAC,OAAD,CAAMY,GAAG,qBAAT,oBACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAG,sBAAT,kBAEN,yCACA,wBAAIZ,UAAU,4BACZ,4BAAI,uBAAGa,KAAK,aAAR,2B,wMClBRC,E,gLACJC,OAAA,WACE,IAAMC,EAAQC,IAAIC,KAAM,sCAElBC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,gBACpBE,SAEH,OACE,kBAAC,IAAD,CAAQC,SAAUN,KAAKO,MAAMD,SAAUE,MAAM,WAET,IAAhCR,KAAKO,MAAME,YAAYC,MACvB,yBAAK5B,UAAU,eACb,uCACA,sFAGJ,yBAAKA,UAAS,gDAAmF,IAAhCkB,KAAKO,MAAME,YAAYC,KAAa,aAAe,KAClH,yBAAK5B,UAAS,WACXgB,EAAMa,KAAI,YAAqB,IAAZC,EAAW,EAAjBC,KACNL,EAAQT,IAAIa,EAAM,sBAAwBA,EAAKE,OAAOC,KACtDC,IAAYJ,EAAKK,YAAYC,KACnC,OACE,yBAAKpC,UAAS,SAAYkC,EAAS,YAAc,gBAAoBG,IAAKP,EAAKE,OAAOC,MAClFC,EACC,oCACC,wBAAIlC,UAAU,cACZ,uBAAGa,KAAMiB,EAAKK,YAAYC,MAAOV,IAEnC,uBAAG1B,UAAU,oBACX,0BAAMA,UAAU,aAAa8B,EAAKK,YAAYG,MAC9C,kBAAC,OAAD,CAAM1B,GAAIkB,EAAKE,OAAOO,YAAavC,UAAU,aAA7C,eAGH,oCACC,wBAAIA,UAAU,cACZ,kBAAC,OAAD,CAAMY,GAAIkB,EAAKE,OAAOO,aAAcb,IAEtC,uBAAG1B,UAAU,oBACX,0BAAMA,UAAU,aAAa8B,EAAKK,YAAYG,MAC9C,0BAAMtC,UAAU,gBAAhB,iBAAiD8B,EAAKU,WAAtD,WAA2EV,EAAKU,WAAa,EAAI,IAAI,KACrG,kBAAC,OAAD,CAAM5B,GAAIkB,EAAKE,OAAOO,YAAavC,UAAU,aAA7C,eAIJmB,EAAUW,EAAKW,aAKvB,wBAAIzC,UAAU,mBACZ,4BAEKkB,KAAKO,MAAME,YAAYC,KAAOV,KAAKO,MAAME,YAAYe,WAAa,GACnE,kBAAC,OAAD,CAAM9B,GAAE,kBAAmBM,KAAKO,MAAME,YAAYC,KAAO,GAAKe,IAAI,QAAlE,qBAKJ,4BAEKzB,KAAKO,MAAME,YAAYC,KAAO,GAC/B,kBAAC,OAAD,CAAMhB,GAC4B,IAAhCM,KAAKO,MAAME,YAAYC,KAAvB,6BAEiBV,KAAKO,MAAME,YAAYC,KAAQe,IAAI,QAHtD,oBAUR,kBAAC,IAAD,S,GAxEwBrB,IAAMsB,WA+EzB9B,YAER,IAAM+B,EAAS","file":"component---src-templates-journal-page-template-js-ba37efac59fde52603d3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst JournalSidebar = ({ minimal }) => (\n  <aside>\n    <h4>Newsletter</h4>\n\n    <p className=\"prominent\">Get news about my latest apps and articles.</p>\n\n    <form className=\"newsletter\" action=\"https://tinyletter.com/lekevicius\" method=\"post\" target=\"popupwindow\" onSubmit={ function() { window.open('https://tinyletter.com/lekevicius', 'popupwindow', 'scrollbars=yes,width=800,height=600'); return true } }>\n      <input type=\"text\" name=\"email\" placeholder=\"your@email.com\" id=\"tlemail\" />\n      <input type=\"hidden\" value=\"1\" name=\"embed\"/>\n      <input type=\"submit\" className=\"secondary\" value=\"Subscribe\" />\n    </form>\n\n    <p className=\"small-print\">I won't email you often. Expect a brief letter every 2-3 months. I also really appreciate replies and feedback.</p>\n\n    {\n      !minimal &&\n      (<>\n        <h4>Archive</h4>\n        <ul className=\"unstyled archive-links\">\n          <li><Link to=\"/journal/archive/\">Monthly archive</Link></li>\n          <li><Link to=\"/journal/articles/\">All articles</Link></li>\n        </ul>\n        <h4>Subscribe</h4>\n        <ul className=\"unstyled subscribe-links\">\n          <li><a href=\"/feed.xml\">Subscribe via RSS</a></li>\n          {/* <li>Everything via <a href=\"\">RSS</a>, <a href=\"\">JSONFeed</a></li>\n          <li>Articles via <a href=\"\">RSS</a>, <a href=\"\">JSONFeed</a></li> */}\n        </ul>\n      </>)\n    }\n  </aside>\n)\n\nexport default JournalSidebar\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport rehypeReact from \"rehype-react\"\nimport JournalSidebar from \"../components/JournalSidebar\"\n\nimport Layout from './Layout'\n\nclass JournalPageTemplate extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    const renderAst = new rehypeReact({\n      createElement: React.createElement\n    }).Compiler\n\n    return (\n      <Layout location={this.props.location} title=\"Journal\">\n        {\n          this.props.pageContext.page === 0 &&\n          <div className=\"page-header\">\n            <h1>Journal</h1>\n            <p>Articles and links about design, technology and media.</p>\n          </div>\n        }\n        <div className={ `content-layout journal-content journal-page ${ this.props.pageContext.page === 0 ? 'first-page' : '' }` }>\n          <div className={ `content` }>\n            {posts.map(({ node: post }) => {\n              const title = get(post, 'frontmatter.title') || post.fields.slug\n              const isLink = !! post.frontmatter.link\n              return (\n                <div className={ `post ${ isLink ? 'post-link' : 'post-article' }` } key={post.fields.slug}>\n                  { isLink ? \n                    (<>\n                      <h3 className=\"post-title\">\n                        <a href={post.frontmatter.link}>{title}</a>\n                      </h3>\n                      <p className=\"secondary byline\">\n                        <span className=\"post-date\">{post.frontmatter.date}</span>\n                        <Link to={post.fields.journalPath} className=\"permalink\">Permalink</Link>\n                      </p>\n                    </>) :\n                    (<>\n                      <h3 className=\"post-title\">\n                        <Link to={post.fields.journalPath}>{title}</Link>\n                      </h3>\n                      <p className=\"secondary byline\">\n                        <span className=\"post-date\">{post.frontmatter.date}</span>\n                        <span className=\"reading-time\">Reading time: {`${post.timeToRead} minute${ post.timeToRead > 1 ? 's':'' }`}</span>\n                        <Link to={post.fields.journalPath} className=\"permalink\">Permalink</Link>\n                      </p>\n                    </>)\n                  }\n                  { renderAst(post.htmlAst) }\n                </div>\n              )\n            })}\n\n            <ul className=\"page-navigation\">\n              <li>\n                {\n                  (this.props.pageContext.page < this.props.pageContext.totalPages - 1) &&\n                  <Link to={`/journal/page/${this.props.pageContext.page + 2}`} rel=\"next\">\n                    ← Previous posts\n                  </Link>\n                }\n              </li>\n              <li>\n                {\n                  (this.props.pageContext.page > 0) &&\n                  <Link to={\n                    this.props.pageContext.page === 1 ?\n                    `/journal/` :\n                    `/journal/page/${this.props.pageContext.page}`} rel=\"prev\">\n                    Newer posts →\n                  </Link>\n                }\n              </li>\n            </ul>\n          </div>\n          <JournalSidebar />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default JournalPageTemplate\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        fileAbsolutePath: {\n          glob: \"**/journal/**\"\n        }\n      }\n    ) {\n      edges {\n        node {\n          htmlAst\n          fields {\n            slug\n            journalPath\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM Do, YYYY\")\n            title\n            link\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}