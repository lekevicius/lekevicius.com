{"version":3,"sources":["webpack:///./src/templates/ProjectTemplate.js","webpack:///./src/components/Counter.js"],"names":["ProjectTemplate","render","project","this","props","data","markdownRemark","featureImage","fixedImagesBySlug","get","map","node","imageMatch","absolutePath","match","childImageSharp","fixed","projectIcon","fields","slug","headDescription","frontmatter","pageDescription","description","bodyclass","trim","renderAst","rehypeReact","createElement","React","components","Counter","Compiler","location","title","bodyClass","image","publicURL","className","htmlAst","Component","pageQuery","state","value","Number","initialvalue","handleIncrement","setState","handleDecrement","style","flex","onClick","defaultProps"],"mappings":"8QAUMA,E,gLACJC,OAAA,WACE,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,eAC1BC,EAAeJ,KAAKC,MAAMC,KAAKE,aAE/BC,EAAoB,GACXC,cAAIN,KAAM,4BAClBO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAaD,EAAKE,aAAaC,MAAM,2CAI3C,OAHIF,IACFJ,EAAkBI,EAAW,IAAMD,EAAKI,gBAAgBC,OAEnD,QAET,IAAMC,EAAcT,EAAkBN,EAAQgB,OAAOC,MAE/CC,EAAkBlB,EAAQmB,YAAYC,gBAC5CpB,EAAQmB,YAAYC,gBAElBpB,EAAQmB,YAAYE,YACpBrB,EAAQmB,YAAYE,YACpB,8BAGEC,EAAYtB,EAAQmB,YAAYG,UAAYtB,EAAQmB,YAAYG,UAAY,GAChFA,GAAY,gBAAgBA,GAAYC,OAExC,IAAMC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CAAE,sBAAuBC,OACpCC,SAEH,OACE,kBAAC,IAAD,CACEC,SAAU9B,KAAKC,MAAM6B,SACrBC,MAAOhC,EAAQmB,YAAYa,MAC3BX,YAAaH,EACbe,UAAWX,EACXY,QAAO7B,GAAeA,EAAa8B,WAGnC,yBAAKC,UAAU,eACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAKtB,MAAOC,KAEd,yBAAKqB,UAAU,oBACb,4BAAKpC,EAAQmB,YAAYa,OACvBhC,EAAQmB,YAAYC,iBACpB,uBAAGgB,UAAU,aAAapC,EAAQmB,YAAYC,mBAIpD,yBAAKgB,UAAU,kBACb,yBAAKA,UAAU,WACXZ,EAAUxB,EAAQqC,a,GAtDFV,IAAMW,WA8DrBxC,YAER,IAAMyC,EAAS,c,2GCxEDV,E,4JAKnBW,MAAQ,CACNC,MAAOC,OAAO,EAAKxC,MAAMyC,e,EAG3BC,gBAAkB,WAChB,EAAKC,UAAS,SAAAL,GACZ,MAAO,CACLC,MAAOD,EAAMC,MAAQ,O,EAK3BK,gBAAkB,WAChB,EAAKD,UAAS,SAAAL,GACZ,MAAO,CACLC,MAAOD,EAAMC,MAAQ,O,4GAK3B1C,OAAA,WACE,OACE,8BACE,4BAAQgD,MAAO,CAAEC,KAAK,QAAtB,UAAwC/C,KAAKuC,MAAMC,OACnD,4BAAQQ,QAAShD,KAAK6C,iBAAtB,MACA,4BAAQG,QAAShD,KAAK2C,iBAAtB,Q,GA9B6BjB,IAAMW,WAAtBT,EACZqB,aAAe,CACpBP,aAAc","file":"component---src-templates-project-template-js-0be863a1da6c1bc8f24e.js","sourcesContent":["import React from 'react'\nimport Img from \"gatsby-image\"\nimport { get } from 'lodash'\nimport { graphql } from 'gatsby'\n\nimport rehypeReact from \"rehype-react\"\nimport Counter from \"../components/Counter\"\n\nimport Layout from './Layout'\n\nclass ProjectTemplate extends React.Component {\n  render() {\n    const project = this.props.data.markdownRemark\n    const featureImage = this.props.data.featureImage\n\n    const fixedImagesBySlug = {}\n    const images = get(this, 'props.data.allFile.edges')\n    images.map(({ node }) => {\n      const imageMatch = node.absolutePath.match(/\\/projects\\/([a-z0-9-]+)\\/project-image/)\n      if (imageMatch) {\n        fixedImagesBySlug[imageMatch[1]] = node.childImageSharp.fixed\n      }\n      return null\n    })\n    const projectIcon = fixedImagesBySlug[project.fields.slug]\n\n    const headDescription = project.frontmatter.pageDescription ? \n    project.frontmatter.pageDescription : \n    (\n      project.frontmatter.description ?\n      project.frontmatter.description :\n      \"Project by Jonas Lekevicius\"\n    )\n\n    let bodyclass = project.frontmatter.bodyclass ? project.frontmatter.bodyclass : ''\n    bodyclass = `project-page ${bodyclass}`.trim()\n\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: { \"interactive-counter\": Counter },\n    }).Compiler\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={project.frontmatter.title}\n        description={headDescription}\n        bodyClass={bodyclass}\n        image={featureImage ? featureImage.publicURL : false}\n        >\n\n        <div className=\"page-header\">\n          <div className=\"page-header-icon\">\n            <Img fixed={projectIcon} />\n          </div>\n          <div className=\"page-header-text\">\n            <h1>{project.frontmatter.title}</h1>\n            { project.frontmatter.pageDescription &&\n              <p className=\"page-lead\">{project.frontmatter.pageDescription}</p>\n            }\n          </div>\n        </div>\n        <div className=\"content-layout\">\n          <div className=\"content\">\n            { renderAst(project.htmlAst) }\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ProjectTemplate\n\nexport const pageQuery = graphql`\n  query ProjectByPath($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      fields {\n        slug\n        projectPath\n      }\n      frontmatter {\n        title\n        description\n        bodyclass\n        pageDescription\n      }\n    }\n    featureImage: file(fields: {\n      featureImageType: { eq: \"projects\" }\n      featureImageSlug: { eq: $slug }\n    }) {\n      fields {\n        featureImageType\n        featureImageSlug\n      }\n      publicURL\n    }\n    allFile(filter: {\n      absolutePath: {\n        glob: \"**/projects/*/project-image.png\"\n      }\n    }) {\n      edges {\n        node {\n          absolutePath\n          childImageSharp {\n            fixed(width: 128) {\n              base64\n              aspectRatio\n              width\n              height\n              src\n              srcSet\n              originalName\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\n\nexport default class Counter extends React.Component {\n  static defaultProps = {\n    initialvalue: 0,\n  }\n\n  state = {\n    value: Number(this.props.initialvalue),\n  }\n\n  handleIncrement = () => {\n    this.setState(state => {\n      return {\n        value: state.value + 1,\n      }\n    })\n  }\n\n  handleDecrement = () => {\n    this.setState(state => {\n      return {\n        value: state.value - 1,\n      }\n    })\n  }\n\n  render() {\n    return (\n      <span>\n        <strong style={{ flex: `1 1` }}>Count: {this.state.value}</strong>\n        <button onClick={this.handleDecrement}>-1</button>\n        <button onClick={this.handleIncrement}>+1</button>\n      </span>\n    )\n  }\n}"],"sourceRoot":""}