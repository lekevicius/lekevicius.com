{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["HomePage","render","journalArticles","get","this","projectInfo","projectImages","projectInfoMap","keyBy","node","fields","slug","additionalProjects","additionalProject","projectPath","path","frontmatter","projectImageMap","absolutePath","match","location","props","bodyClass","className","to","map","key","info","image","fluid","childImageSharp","title","description","cleanText","excerpt","replace","journalPath","React","Component","pageQuery"],"mappings":"moCASMA,E,gLACJC,OAAA,WAQE,IAPA,IAOA,EAPMC,EAAkBC,cAAIC,KAAM,oCAE5BC,EAAcF,cAAIC,KAAM,gCACxBE,EAAgBH,cAAIC,KAAM,kCAG1BG,EAAiBC,gBAAMH,GAAa,qBAAGI,KAAgBC,OAAOC,QACpE,IAAgCC,KAAhC,aAAoD,CAAC,IAA1CC,EAAyC,QAClDN,EAAeM,EAAkBF,MAAQ,CACvCF,KAAM,CACJC,OAAQ,CACNC,KAAME,EAAkBF,KACxBG,YAAaD,EAAkBE,MAEjCC,YAAaH,IAInB,IAAMI,EAAkBT,gBAAMF,GAAe,qBAAGG,KACzCS,aAAaC,MAAM,+CAA+C,MAEzE,OACE,kBAAC,IAAD,CAAQC,SAAUhB,KAAKiB,MAAMD,SAAUE,UAAU,YAC/C,yBAAKC,UAAU,cACb,kEACA,0OAEF,6BAASA,UAAU,iBACjB,wBAAIA,UAAU,iBAAgB,iDAA9B,IAA2D,kBAAC,OAAD,CAAMC,GAAG,aAAT,sBAE3D,wBAAID,UAAU,qBAzBK,CAAC,MAAO,cAAe,aA2BrBE,KAAI,SAACC,GACpB,IAAMC,EAAOpB,EAAemB,GACtBE,EAAQX,EAAgBS,GAC9B,OACE,wBAAIA,IAAKA,GACP,kBAAC,OAAD,CAAMF,GAAIG,EAAKlB,KAAKC,OAAOI,aACzB,kBAAC,IAAD,CAAKe,MAAOD,EAAMnB,KAAKqB,gBAAgBD,QACvC,4BAAKF,EAAKlB,KAAKO,YAAYe,OAC3B,uBAAGR,UAAU,aAAaI,EAAKlB,KAAKO,YAAYgB,oBAS9D,6BAAST,UAAU,+BACjB,yBAAKA,UAAU,WACb,wBAAIA,UAAU,iBAAgB,iDAA9B,IAA2D,kBAAC,OAAD,CAAMC,GAAG,YAAT,iBAE3D,wBAAID,UAAU,qBAEVrB,EAAgBuB,KAAI,YAAe,IAAZhB,EAAW,EAAXA,KACfwB,EAAYxB,EAAKyB,QAAQC,QAAQ,WAAY,IACnD,OACE,wBAAIT,IAAKjB,EAAKC,OAAO0B,aACnB,kBAAC,OAAD,CAAMZ,GAAIf,EAAKC,OAAO0B,aACpB,4BAAK3B,EAAKO,YAAYe,OACtB,uBAAGR,UAAU,aAAaU,a,GA/D3BI,IAAMC,WA6EdtC,YAaR,IAAMuC,EAAS,a","file":"component---src-pages-index-js-542016bae6ef008bfe23.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Img from \"gatsby-image\"\nimport { get, keyBy } from 'lodash'\n\nimport Layout from '../templates/Layout'\nimport additionalProjects from './projects.json'\nimport './index.css'\n\nclass HomePage extends React.Component {\n  render() {\n    const journalArticles = get(this, 'props.data.journalArticles.edges')\n    // const journalLinks = get(this, 'props.data.journalLinks.edges')\n    const projectInfo = get(this, 'props.data.projectInfo.edges')\n    const projectImages = get(this, 'props.data.projectImages.edges')\n\n    const featuredProjects = ['nyt', 'cryptoproof', 'october30']\n    const projectInfoMap = keyBy(projectInfo, ({ node }) => node.fields.slug)\n    for (const additionalProject of additionalProjects) {\n      projectInfoMap[additionalProject.slug] = {\n        node: {\n          fields: {\n            slug: additionalProject.slug,\n            projectPath: additionalProject.path\n          },\n          frontmatter: additionalProject\n        }\n      }\n    }\n    const projectImageMap = keyBy(projectImages, ({ node }) => \n      node.absolutePath.match(/\\/projects\\/([a-z0-9-]+)\\/feature-image.png/)[1])\n    \n    return (\n      <Layout location={this.props.location} bodyClass=\"homepage\">\n        <div className=\"intro-text\">\n          <h3>I design and build digital things.</h3>\n          <p>Previously I co-founded Lemon Labs app design and development agency, worked as head of product design at Treatwell and created Infinite Loop game. Now, building new things and seeing where it leads me.</p>\n        </div>\n        <section className=\"home-projects\">\n          <h4 className=\"section-title\"><span>Recent projects</span> <Link to=\"/projects\">View all projects</Link></h4>\n\n          <ul className=\"home-project-list\">\n            {\n              featuredProjects.map((key) => {\n                const info = projectInfoMap[key]\n                const image = projectImageMap[key]\n                return (\n                  <li key={key}>\n                    <Link to={info.node.fields.projectPath}>\n                      <Img fluid={image.node.childImageSharp.fluid} />\n                      <h3>{info.node.frontmatter.title}</h3>\n                      <p className=\"secondary\">{info.node.frontmatter.description}</p>\n                    </Link>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </section>\n\n        <section className=\"home-journal content-layout\">\n          <div className=\"content\">\n            <h4 className=\"section-title\"><span>Recent articles</span> <Link to=\"/journal\">Read journal</Link></h4>\n\n            <ul className=\"home-article-list\">\n              {\n                journalArticles.map(({ node }) => {\n                  const cleanText = node.excerpt.replace(/<[^>]+>/g, '')\n                  return (\n                    <li key={node.fields.journalPath}>\n                      <Link to={node.fields.journalPath}>\n                        <h3>{node.frontmatter.title}</h3>\n                        <p className=\"secondary\">{cleanText}</p>\n                      </Link>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default HomePage\n\n// const featuredProjects = ['nyt', 'cryptoproof', 'october30']\n// const featuredRegex = featuredProjects.join('|')\n\n// const projectInfoRegex = `/[a-zA-Z0-9/]+/projects/(${featuredRegex}).md/`\n// const projectImageRegex = `/[a-zA-Z0-9/]+/projects/(${featuredRegex})/feature-image.png/`\n\n// export const pageContext = {\n//   projectInfoRegex,\n//   projectImageRegex\n// }\n\nexport const pageQuery = graphql`\n  query {\n    projectInfo: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {\n          regex: \"/[a-zA-Z0-9/]+/projects/(nyt|cryptoproof|october30).md/\"\n        }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            projectPath\n          }\n          frontmatter {\n            title\n            description\n          }\n        }\n      }\n    }\n    projectImages: allFile(filter: {\n      fields: {\n        featureImageType: { eq: \"projects\" }\n      }\n    }) {\n      edges {\n        node {\n          absolutePath\n          childImageSharp {\n            fluid(maxWidth: 480) {\n              base64\n              aspectRatio\n              src\n              srcSet\n              sizes\n              originalImg\n              originalName\n              presentationWidth\n              presentationHeight\n            }\n          }\n        }\n      }\n    }\n    journalArticles: allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC\n      }\n      filter: {\n        fileAbsolutePath: {\n          glob: \"**/journal/**\"\n        }\n        frontmatter: {\n          link: { eq: null }\n        }\n      }\n      limit: 3\n    ) {\n      edges {\n        node {\n          fields {\n            journalPath\n          }\n          frontmatter {\n            date\n            title\n          }\n          excerpt\n        }\n      }\n    }\n    journalLinks: allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC\n      }\n      filter: {\n        fileAbsolutePath: {\n          glob: \"**/journal/**\"\n        }\n        frontmatter: {\n          link: { ne: null }\n        }\n      }\n      limit: 5\n    ) {\n      edges {\n        node {\n          fields {\n            journalPath\n          }\n          frontmatter {\n            link\n            date\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n\n\n`\n"],"sourceRoot":""}